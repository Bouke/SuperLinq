<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<AssemblyName>SuperLinq</AssemblyName>
		<RootNamespace>SuperLinq</RootNamespace>
	</PropertyGroup>

	<PropertyGroup Label="Nuget">
		<Title>SuperLinq</Title>

		<Authors>SuperLinq Developers</Authors>
		<PackageTags>linq;extensions</PackageTags>

		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageReadmeFile>readme.md</PackageReadmeFile>

		<PublishRepositoryUrl>true</PublishRepositoryUrl>
		<RepositoryUrl>https://github.com/viceroypenguin/SuperLinq</RepositoryUrl>

		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>

		<GenerateDocumentationFile>true</GenerateDocumentationFile>

		<!-- Parallel build is disabled to avoid file locking issues during T4 code generation.
         See also: https://github.com/dotnet/msbuild/issues/2781 -->
		<BuildInParallel>false</BuildInParallel>
	</PropertyGroup>

	<PropertyGroup>
		<Description>
			This project enhances LINQ to Objects with the following methods:

			- Acquire
			- AggregateRight
			- AtLeast
			- AtMost
			- Backsert
			- Batch
			- Cartesian
			- Choose
			- CountBetween
			- CompareCount
			- CountBy
			- CountDown
			- Consume
			- DistinctBy
			- ElementAt (pre-.NET 6.0)
			- EndsWith
			- EquiZip
			- Evaluate
			- Exactly
			- ExceptBy
			- Exclude
			- FallbackIfEmpty
			- FillBackward
			- FillForward
			- Flatten
			- Fold
			- From
			- FullGroupJoin
			- FullJoin
			- Generate
			- GenerateByIndex
			- GroupAdjacent
			- Index
			- IndexBy
			- Insert
			- Interleave
			- Lag
			- Lead
			- LeftJoin
			- MaxElementsBy
			- MinElementsBy
			- Move
			- OrderBy
			- OrderedMerge
			- Pad
			- PadStart
			- Pairwise
			- PartialSort
			- PartialSortBy
			- Partition
			- Permutations
			- Pipe
			- PreScan
			- Random
			- RandomDouble
			- RandomSubset
			- Rank
			- RankBy
			- Return
			- RightJoin
			- RunLengthEncode
			- ScanBy
			- ScanRight
			- Segment
			- Sequence
			- Shuffle
			- SkipUntil
			- Slice
			- SortedMerge
			- Split
			- StartsWith
			- Subsets
			- TagFirstLast
			- Take (pre-.NET 6.0)
			- TakeEvery
			- TakeUntil
			- ThenBy
			- ToArrayByIndex
			- ToDataTable
			- ToDelimitedString
			- ToDictionary
			- ToLookup
			- Trace
			- Transpose
			- TraverseBreadthFirst
			- TraverseDepthFirst
			- TrySingle (EXPERIMENTAL)
			- Unfold
			- Window
			- WindowLeft
			- WindowRight
			- ZipLongest
			- ZipShortest
		</Description>
		<Description>$([System.Text.RegularExpressions.Regex]::Replace($(Description), `\s+`, ` `).Trim().Replace(` - `, `, `).Replace(`:,`, `:`))</Description>

		<Copyright>
			Portions © 2008 Jonathan Skeet.
			Portions © 2009 Atif Aziz, Chris Ammerman, Konrad Rudolph.
			Portions © 2010 Johannes Rudolph, Leopold Bushkin.
			Portions © 2015 Felipe Sateler, “sholland”.
			Portions © 2016 Andreas Gullberg Larsen, Leandro F. Vieira (leandromoh).
			Portions © 2017 Jonas Nyrup (jnyrup).
			Portions © 2022 Turning Code, LLC
			Portions © 2022 Amichai Mantinband
			Portions © Microsoft. All rights reserved.
		</Copyright>
		<Copyright>$([System.Text.RegularExpressions.Regex]::Replace($(Copyright), `\s+`, ` `).Trim())</Copyright>
	</PropertyGroup>

	<ItemGroup>
		<None Include="readme.md" Pack="true" PackagePath="\" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1" PrivateAssets="All" />
		<PackageReference Include="MinVer" Version="4.0.0" PrivateAssets="All" />
		<PackageReference Include="Nullable" Version="1.3.0" PrivateAssets="All" />
		<PackageReference Include="System.Interactive" Version="6.0.1" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\..\Generators\Regenerator\SuperLinq.Generator.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
	</ItemGroup>

	<PropertyGroup Label="MinVer">
		<MinVerAutoIncrement>minor</MinVerAutoIncrement>
		<MinVerDefaultPreReleasePhase>preview</MinVerDefaultPreReleasePhase>
		<MinVerTagPrefix>v</MinVerTagPrefix>
	</PropertyGroup>

	<ItemGroup>
		<None Update="Cartesian.g.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Cartesian.g.cs</LastGenOutput>
		</None>
		<None Update="Fold.g.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>Fold.g.cs</LastGenOutput>
		</None>
		<None Update="ToDelimitedString.g.tt">
			<Generator>TextTemplatingFileGenerator</Generator>
			<LastGenOutput>ToDelimitedString.g.cs</LastGenOutput>
		</None>
	</ItemGroup>

	<ItemGroup>
		<Service Include="{508349b6-6b84-4df5-91f0-309beebad82d}" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Cartesian.g.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>Cartesian.g.tt</DependentUpon>
		</Compile>
		<Compile Update="Fold.g.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>Fold.g.tt</DependentUpon>
		</Compile>
		<Compile Update="ToDelimitedString.g.cs">
			<DesignTime>True</DesignTime>
			<AutoGen>True</AutoGen>
			<DependentUpon>ToDelimitedString.g.tt</DependentUpon>
		</Compile>
	</ItemGroup>

	<Target Name="_CollectTextTemplates">
		<ItemGroup>
			<TextTemplate Include="%(None.Identity)" Condition="'%(None.Generator)' == 'TextTemplatingFileGenerator'">
				<LastGenOutput>%(None.LastGenOutput)</LastGenOutput>
			</TextTemplate>
		</ItemGroup>
	</Target>

	<Target Name="_TransformTextTemplate" Inputs="$(TextTemplate)" Outputs="$(TextTemplateOutput)">
		<Exec Command="dotnet t4 -h &gt; /dev/null" IgnoreExitCode="True" Condition="'$(WINDIR)' == ''">
			<Output TaskParameter="ExitCode" PropertyName="_TestExitCode" />
		</Exec>
		<Exec Command="dotnet t4 -h &gt; NUL" IgnoreExitCode="True" Condition="'$(WINDIR)' != ''">
			<Output TaskParameter="ExitCode" PropertyName="_TestExitCode" />
		</Exec>
		<Exec Command="dotnet tool restore" Condition="$(_TestExitCode) != 0" />
		<Exec Command="dotnet t4 $(TextTemplate)" />
	</Target>

	<Target Name="TransformTextTemplates" DependsOnTargets="_CollectTextTemplates">
		<MSBuild Projects="$(MSBuildProjectFile)" Targets="_TransformTextTemplate" Properties="TextTemplate=%(TextTemplate.Identity);TextTemplateOutput=%(TextTemplate.LastGenOutput)" />
	</Target>

	<Target Name="_TransformTextTemplates" AfterTargets="BeforeBuild" DependsOnTargets="TransformTextTemplates" />

</Project>
